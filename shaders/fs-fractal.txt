// If device support high precision floats, use it
#ifdef GL_FRAGMENT_PRECISION_HIGH
	precision highp float;
#else
	precision mediump float;
#endif

precision mediump int;
uniform vec2 uCanvasSize;
uniform vec2 uOffset;
uniform float uScale;

vec4 calc(vec2 colorCoord) {
	float x = 0.0;
	float y = 0.0;
	float v = 10000.0;
	float j = 10000.0;
	for (int i = 0; i < 100; ++i) {
		float tempX = x*x-y*y+colorCoord.x;
		y = 2.0*x*y+colorCoord.y;
		x = tempX;
		v = min(v, abs(x*x+y*y));
		j = min(j, abs(x*y));
		if (x*x+y*y >= 8.0) {
			float d = (float(i) - (log(log(sqrt(x*x+y*y))) / log(2.0))) / 50.0;
			v = (1.0 - v) / 2.0;
			j = (1.0 - j) / 2.0;

			return vec4(d+j, d, d+v, 1);
		}

	}
	return vec4(0, 0, 0, 1);
}

void main() {
	vec2 colorCoord = (gl_FragCoord.xy / uCanvasSize.xy) * 2.0 - vec2(1.0, 1.0);
	colorCoord = colorCoord * uScale + uOffset;
	gl_FragColor = calc(colorCoord);
}