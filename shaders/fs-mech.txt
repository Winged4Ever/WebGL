// 3D, perspective, view, texture support

// If device support high precision floats, use it
#ifdef GL_FRAGMENT_PRECISION_HIGH
	precision highp float;
#else
	precision mediump float;
#endif

varying vec4 vWorldSpaceNormal;
varying vec2 vVertexTextureCoord;

uniform sampler2D uDiffuseSampler;
uniform sampler2D uEmissiveSampler;

void main() {
	vec3 lightDir = vec3(0.5, 0, 1);
	float shade = dot(vWorldSpaceNormal.xyz, lightDir);
	vec4 diffuse = texture2D(uDiffuseSampler, vVertexTextureCoord);
	vec4 emissive = texture2D(uEmissiveSampler, vVertexTextureCoord);
	gl_FragColor = vec4(max(diffuse.rgb * shade, emissive.rgb), 1);
}